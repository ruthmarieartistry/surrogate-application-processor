/**
 * QUICK TEST - Regenerate Summary for Record ID: 4818629000000139011
 *
 * INSTRUCTIONS:
 * 1. Go to Zoho Creator â†’ Functions
 * 2. Create new function called: quickTest
 * 3. No parameters needed
 * 4. Paste this code
 * 5. Click Execute
 */

void quickTest()
{
	webhookUrl = "https://surrogate-application-processor.vercel.app/api/process-application";

	// IMPORTANT: Update these to match YOUR app
	appLinkName = "alceasurrogacy";  // Your app link name (check URL)
	formLinkName = "Full_Surrogate_Application";  // Your form link name
	recordID = 4818629000000139011;  // Amy Ames record (as BIGINT)

	try
	{
		info "=== STARTING TEST ===";
		info "Fetching record ID: " + recordID;

		// Fetch the record - using connection name (try "creator" as default)
		record = zoho.creator.getRecordById(appLinkName,formLinkName,recordID,"creator","zoho.creator.all");

		if(record == null)
		{
			info "ERROR: Record not found!";
			info "Check your appName and formName above";
			return;
		}

		info "SUCCESS: Record found!";
		info "Name: " + record.get("Legal_First_Name") + " " + record.get("Legal_Last_Name");

		// Build minimal application text for testing
		applicationText = "SURROGATE APPLICATION\n\n";
		applicationText = applicationText + "PERSONAL INFORMATION:\n";
		applicationText = applicationText + "Name: " + record.get("Legal_First_Name") + " " + record.get("Legal_Last_Name") + "\n";
		applicationText = applicationText + "BMI: " + record.get("BMI_High") + "\n";
		applicationText = applicationText + "State: " + record.get("State_of_Residence") + "\n";
		applicationText = applicationText + "\nPREGNANCY HISTORY:\n";
		applicationText = applicationText + "Pregnancies: " + record.get("Number_of_Pregnancies") + "\n";
		applicationText = applicationText + "Vaginal Deliveries: " + record.get("How_Many_Vaginal_Deliveries") + "\n";
		applicationText = applicationText + "C-Sections: " + record.get("How_Many_C_Section_Deliveries") + "\n";

		info "Application text built, length: " + applicationText.length();

		// Prepare payload
		payload = Map();
		payload.put("application_text",applicationText);
		payload.put("application_id",recordID);
		payload.put("submitted_date",zoho.currentdate.toString("yyyy-MM-dd"));

		info "Calling webhook...";

		// Call webhook
		response = invokeurl
		[
			url :webhookUrl
			type :POST
			parameters:payload
			headers:{"Content-Type":"application/json"}
		];

		info "=== WEBHOOK RESPONSE ===";
		info response.toString();

		// Check response
		if(response.get("success") == true)
		{
			info "=== SUCCESS! ===";

			formattedSummary = response.get("summary");
			info "Summary generated (first 200 chars):";
			info formattedSummary.subString(0,200);

			// Update the record
			updateMap = Map();
			updateMap.put("Candidate_Summary",formattedSummary);

			info "Updating record...";
			updateResult = zoho.creator.updateRecord(appLinkName,formLinkName,recordID,updateMap,"creator","zoho.creator.all");

			info "=== UPDATE COMPLETE ===";
			info "Go check record 4818629000000139011 - the summary should be populated!";
		}
		else
		{
			info "=== WEBHOOK FAILED ===";
			info "Error: " + response.toString();
		}
	}
	catch (e)
	{
		info "=== EXCEPTION ===";
		info "Error: " + e.toString();
	}
}
